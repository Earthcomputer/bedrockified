--- a/net/minecraft/world/gen/feature/structure/OceanMonumentStructure.java
+++ b/net/minecraft/world/gen/feature/structure/OceanMonumentStructure.java
@@ -44,13 +44,13 @@
    protected boolean hasStartAt(IChunkGenerator<?> chunkGen, Random rand, int chunkPosX, int chunkPosZ) {
       ChunkPos chunkpos = this.getStartPositionForPosition(chunkGen, rand, chunkPosX, chunkPosZ, 0, 0);
       if (chunkPosX == chunkpos.x && chunkPosZ == chunkpos.z) {
-         for(Biome biome : chunkGen.getBiomeProvider().getBiomesInSquare(chunkPosX * 16 + 9, chunkPosZ * 16 + 9, 16)) {
+         for(Biome biome : chunkGen.getBiomeProvider().getBiomesInSquare(chunkPosX * 16 + 8, chunkPosZ * 16 + 8, 16)) { // BEDROCK: +8, not +9
             if (!chunkGen.hasStructure(biome, Feature.OCEAN_MONUMENT)) {
                return false;
             }
          }
 
-         for(Biome biome1 : chunkGen.getBiomeProvider().getBiomesInSquare(chunkPosX * 16 + 9, chunkPosZ * 16 + 9, 29)) {
+         for(Biome biome1 : chunkGen.getBiomeProvider().getBiomesInSquare(chunkPosX * 16 + 8, chunkPosZ * 16 + 8, 29)) { // BEDROCK: +8, not +9
             if (biome1.getCategory() != Biome.Category.OCEAN && biome1.getCategory() != Biome.Category.RIVER) {
                return false;
             }
@@ -67,7 +67,7 @@
    }
 
    protected StructureStart makeStart(IWorld worldIn, IChunkGenerator<?> generator, SharedSeedRandom random, int x, int z) {
-      Biome biome = generator.getBiomeProvider().getBiome(new BlockPos((x << 4) + 9, 0, (z << 4) + 9), Biomes.DEFAULT);
+      Biome biome = generator.getBiomeProvider().getBiome(new BlockPos((x << 4) + 8, 0, (z << 4) + 8), Biomes.DEFAULT); // BEDROCK: +8, not +9
       return new OceanMonumentStructure.Start(worldIn, random, x, z, biome);
    }
 
